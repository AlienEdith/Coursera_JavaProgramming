#BlueJ class context
comment0.target=test
comment1.params=message\ whichSlice\ totalSlices
comment1.target=java.lang.String\ sliceString(java.lang.String,\ int,\ int)
comment1.text=\ The\ method\ returns\ a\ String\ consisting\ of\ every\ totalSlices-th\ character\ from\ message,\ \r\n\ \ starting\ at\ the\ whichSlice-th\ character.\r\n
comment10.params=
comment10.target=void\ breakVigenere3()
comment2.params=encrypted\ klength\ mostCommon
comment2.target=int[]\ tryKeyLength(java.lang.String,\ int,\ char)
comment2.text=The\ method\ finds\ the\ shift\ for\ each\ index\ in\ the\ key
comment3.params=
comment3.target=void\ breakVigenere()
comment4.params=fr
comment4.target=java.util.HashSet\ readDictionary(edu.duke.FileResource)
comment4.text=The\ method\ returns\ the\ HashSet\ representing\ the\ words\ in\ a\ dictionary
comment5.params=message\ dictionary
comment5.target=int\ countWords(java.lang.String,\ java.util.HashSet)
comment5.text=The\ method\ returns\ the\ integer\ count\ of\ how\ many\ valid\ words\ in\ dictionary\ it\ found\ from\ message
comment6.params=encrypted\ dictionary
comment6.target=java.lang.String\ breakForLanguage(java.lang.String,\ java.util.HashSet)
comment6.text=\ This\ method\ should\ figure\ out\ which\ decryption\ gives\ the\ largest\ count\ of\ real\ words,\ \r\n\ and\ return\ that\ String\ decryption.\r\n
comment7.params=
comment7.target=void\ breakVigenere2()
comment8.params=dictionary
comment8.target=java.lang.String\ mostCommonCharIn(java.util.HashSet)
comment8.text=\ The\ method\ finds\ out\ which\ character,\ of\ the\ letters\ in\ the\ English\ alphabet,\ \r\n\ \ appears\ most\ often\ in\ the\ words\ in\ dictionary\ \r\n
comment9.params=encrypted\ languages
comment9.target=java.util.HashMap\ breakForAllLanguages(java.lang.String,\ java.util.HashMap)
numComments=11
